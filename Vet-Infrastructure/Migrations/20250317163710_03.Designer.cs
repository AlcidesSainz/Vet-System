// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Vet_Infrastructure.Data;

#nullable disable

namespace Vet_Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250317163710_03")]
    partial class _03
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Vet_Domain.Entities.Breed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Breeds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Labrador Retriever",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bulldog",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pastor Alemán",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Golden Retriever",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Poodle",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Chihuahua",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "Rottweiler",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 8,
                            Name = "Yorkshire Terrier",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 9,
                            Name = "Boxer",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 10,
                            Name = "Dachshund",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 11,
                            Name = "Shih Tzu",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 12,
                            Name = "Schnauzer",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 13,
                            Name = "Pug",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 14,
                            Name = "Doberman",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 15,
                            Name = "Beagle",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 16,
                            Name = "Border Collie",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 17,
                            Name = "Bichón Frisé",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 18,
                            Name = "Husky Siberiano",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 19,
                            Name = "Pastor Belga",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 20,
                            Name = "Maltés",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 21,
                            Name = "Siamés",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 22,
                            Name = "Persa",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 23,
                            Name = "Maine Coon",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 24,
                            Name = "Bengalí",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 25,
                            Name = "Sphynx",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 26,
                            Name = "British Shorthair",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 27,
                            Name = "Scottish Fold",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 28,
                            Name = "Ragdoll",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 29,
                            Name = "American Shorthair",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 30,
                            Name = "Exótico de Pelo Corto",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 31,
                            Name = "Azul Ruso",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 32,
                            Name = "Birmano",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 33,
                            Name = "Himalayo",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 34,
                            Name = "Angora Turco",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 35,
                            Name = "Abisinio",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 36,
                            Name = "Ocicat",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 37,
                            Name = "Bombay",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 38,
                            Name = "Chartreux",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 39,
                            Name = "Devon Rex",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 40,
                            Name = "Cornish Rex",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 41,
                            Name = "Periquito",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 42,
                            Name = "Canario",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 43,
                            Name = "Agapornis (Inseparable)",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 44,
                            Name = "Ninfa (Cockatiel)",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 45,
                            Name = "Lorito Australiano",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 46,
                            Name = "Guacamayo",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 47,
                            Name = "Loro Amazónico",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 48,
                            Name = "Cacatúa",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 49,
                            Name = "Periquito de Bourke",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 50,
                            Name = "Diamante Mandarín",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 51,
                            Name = "Diamante Gould",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 52,
                            Name = "Cotorra",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 53,
                            Name = "Yaco (Loro Gris Africano)",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 54,
                            Name = "Loro Eclectus",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 55,
                            Name = "Periquito de Línea",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 56,
                            Name = "Conure del Sol",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 57,
                            Name = "Conure Cabeza Negra",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 58,
                            Name = "Agapornis Fischer",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 59,
                            Name = "Agapornis Roseicollis",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 60,
                            Name = "Periquito Ondulado",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 61,
                            Name = "Holland Lop",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 62,
                            Name = "Netherland Dwarf",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 63,
                            Name = "Rex",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 64,
                            Name = "Cabeza de León",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 65,
                            Name = "Belier Francés",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 66,
                            Name = "Californiano",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 67,
                            Name = "Dutch Rabbit",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 68,
                            Name = "Flemish Giant",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 69,
                            Name = "Hotot Enano",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 70,
                            Name = "Mini Lop",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 71,
                            Name = "American Fuzzy Lop",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 72,
                            Name = "English Angora",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 73,
                            Name = "English Spot",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 74,
                            Name = "Harlequin",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 75,
                            Name = "Tan Rabbit",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 76,
                            Name = "Satin Rabbit",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 77,
                            Name = "Cinnamon Rabbit",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 78,
                            Name = "Chinchilla Rabbit",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 79,
                            Name = "Plata de Champagne",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 80,
                            Name = "Gigante de España",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 81,
                            Name = "Hámster Sirio Dorado",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 82,
                            Name = "Hámster Sirio Panda",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 83,
                            Name = "Hámster Sirio de Pelo Largo",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 84,
                            Name = "Hámster Enano Ruso (Winter White)",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 85,
                            Name = "Hámster Enano de Campbell",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 86,
                            Name = "Hámster Enano Roborowski",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 87,
                            Name = "Hámster Chino",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 88,
                            Name = "Hámster Sirio Satinado",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 89,
                            Name = "Hámster Sirio Bicolor",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 90,
                            Name = "Hámster Sirio Black Bear",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 91,
                            Name = "Hámster Sirio Tortoiseshell",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 92,
                            Name = "Hámster Sirio Dalmatian",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 93,
                            Name = "Hámster Sirio Calico",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 94,
                            Name = "Hámster Sirio Chocolate",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 95,
                            Name = "Hámster Sirio Cream",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 96,
                            Name = "Hámster Sirio Albino",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 97,
                            Name = "Hámster Enano Campbell Albino",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 98,
                            Name = "Hámster Enano Ruso Zafiro",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 99,
                            Name = "Hámster Enano Ruso Perla",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 100,
                            Name = "Hámster Chino Rayado",
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 101,
                            Name = "Betta",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 102,
                            Name = "Guppy",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 103,
                            Name = "Molly",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 104,
                            Name = "Platy",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 105,
                            Name = "Tetra Neón",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 106,
                            Name = "Tetra Cardenal",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 107,
                            Name = "Pez Ángel (Escalar)",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 108,
                            Name = "Disco",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 109,
                            Name = "Goldfish",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 110,
                            Name = "Carpa Koi",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 111,
                            Name = "Cíclido Óscar",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 112,
                            Name = "Corydora",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 113,
                            Name = "Locha Payaso",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 114,
                            Name = "Gourami Enano",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 115,
                            Name = "Pez Arcoíris Boesemani",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 116,
                            Name = "Barbo Tigre",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 117,
                            Name = "Pez Payaso (Amphiprion ocellaris)",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 118,
                            Name = "Pez Globo Enano",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 119,
                            Name = "Killifish",
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 120,
                            Name = "Pez Gato Plecostomus",
                            SpeciesId = 6
                        });
                });

            modelBuilder.Entity("Vet_Domain.Entities.Clinic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Point>("Location")
                        .HasColumnType("geography");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UrlImage")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("Phone")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.ToTable("Clinics");
                });

            modelBuilder.Entity("Vet_Domain.Entities.ClinicVeterinarian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClinicId")
                        .HasColumnType("int");

                    b.Property<int>("VeterinarianId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("VeterinarianId");

                    b.ToTable("ClinicVeterinarians");
                });

            modelBuilder.Entity("Vet_Domain.Entities.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("Vet_Domain.Entities.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BreedId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("BreedId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("Vet_Domain.Entities.Specialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Specialties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "General"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Medicina interna"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cirugía"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Dermatología"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Oftalmología"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Oncología"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Cardiología"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Neurología"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Odontología"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Nutrición"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Rehabilitación"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Comportamiento"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Anestesiología"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Radiología"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Urgencias"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Patología"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Laboratorio"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Zootecnia"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Acupuntura"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Homeopatía"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Fisioterapia"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Ortopedia"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Endocrinología"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Geriatria"
                        });
                });

            modelBuilder.Entity("Vet_Domain.Entities.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Perro"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gato"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ave"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Conejo"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Hámster"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Pez"
                        });
                });

            modelBuilder.Entity("Vet_Domain.Entities.Veterinarian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UrlImage")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("LicenseNumber")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.ToTable("Veterinarians");
                });

            modelBuilder.Entity("Vet_Domain.Entities.VeterinarianSpecialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SpecialtyId")
                        .HasColumnType("int");

                    b.Property<int>("VeterinarianId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecialtyId");

                    b.HasIndex("VeterinarianId");

                    b.ToTable("VeterinarianSpecialties");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Vet_Domain.Entities.Breed", b =>
                {
                    b.HasOne("Vet_Domain.Entities.Species", "Species")
                        .WithMany("Breeds")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("Vet_Domain.Entities.ClinicVeterinarian", b =>
                {
                    b.HasOne("Vet_Domain.Entities.Clinic", "Clinic")
                        .WithMany("ClinicVeterinarians")
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vet_Domain.Entities.Veterinarian", "Veterinarian")
                        .WithMany("ClinicVeterinarians")
                        .HasForeignKey("VeterinarianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");

                    b.Navigation("Veterinarian");
                });

            modelBuilder.Entity("Vet_Domain.Entities.Pet", b =>
                {
                    b.HasOne("Vet_Domain.Entities.Breed", "Breed")
                        .WithMany("Pets")
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vet_Domain.Entities.Owner", "Owner")
                        .WithMany("Pets")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vet_Domain.Entities.Species", "Species")
                        .WithMany("Pets")
                        .HasForeignKey("SpeciesId");

                    b.Navigation("Breed");

                    b.Navigation("Owner");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("Vet_Domain.Entities.VeterinarianSpecialty", b =>
                {
                    b.HasOne("Vet_Domain.Entities.Specialty", "Specialty")
                        .WithMany("VeterinarianSpecialties")
                        .HasForeignKey("SpecialtyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vet_Domain.Entities.Veterinarian", "Veterinarian")
                        .WithMany("VeterinarianSpecialties")
                        .HasForeignKey("VeterinarianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialty");

                    b.Navigation("Veterinarian");
                });

            modelBuilder.Entity("Vet_Domain.Entities.Breed", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("Vet_Domain.Entities.Clinic", b =>
                {
                    b.Navigation("ClinicVeterinarians");
                });

            modelBuilder.Entity("Vet_Domain.Entities.Owner", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("Vet_Domain.Entities.Specialty", b =>
                {
                    b.Navigation("VeterinarianSpecialties");
                });

            modelBuilder.Entity("Vet_Domain.Entities.Species", b =>
                {
                    b.Navigation("Breeds");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("Vet_Domain.Entities.Veterinarian", b =>
                {
                    b.Navigation("ClinicVeterinarians");

                    b.Navigation("VeterinarianSpecialties");
                });
#pragma warning restore 612, 618
        }
    }
}
